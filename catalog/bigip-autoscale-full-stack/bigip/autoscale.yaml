apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeInstanceTemplate
metadata:
  name: instance-template
  namespace: config-control # kpt-set: ${namespace}
  labels:
    created-from: image
    network-type: subnetwork
  annotations:
    cnrm.cloud.google.com/allow-stopping-for-update: "true"
    cnrm.cloud.google.com/project-id: yourproject # kpt-set: ${project-id}
spec:
  description: bigip instance template
  instanceDescription: bigip-autoscale-instance
  region: us-west1  # kpt-set: ${region}
  machineType: n1-standard-4
  minCpuPlatform: Intel Skylake
  disk:
    - sourceImageRef:
        external: projects/f5-7626-networks-public/global/images/f5-bigip-16-0-1-1-0-0-6-payg-best-25mbps-210129040615
  networkInterface:
    - networkRef:
        external: projects/your-project/global/networks/your-network # kpt-set: projects/${project-id}/global/networks/${network-name}
      subnetworkRef:
        external: projects/your-project/regions/us-west1/subnetworks/your-subnet-us-west1 # kpt-set: projects/${project-id}/regions/${region}/subnetworks/${subnetwork-name}
  serviceAccount:
    scopes:
      - cloud-platform
    serviceAccountRef:
      name: srv-acct # kpt-set: ${srv-acct}
  canIpForward: true
  metadataStartupScript: |-
    #!/bin/bash -x

    # Log to local file and serial console
    mkdir -p /var/log/cloud /config/cloud /var/config/rest/downloads /var/lib/cloud/icontrollx_installs
    LOG_FILE=/var/log/cloud/startup-script.log
    echo 'Initializing Runtime Init.'
    npipe=/tmp/$$.tmp
    trap "rm -f $npipe" EXIT
    mknod $npipe p
    tee <$npipe -a ${LOG_FILE} /dev/ttyS0 &
    exec 1>&-
    exec 1>$npipe
    exec 2>&1

    echo "$(date +"%Y-%m-%dT%H:%M:%S.%3NZ") : Startup Script Start"

    # VARS FROM TEMPLATE
    PACKAGE_URL='https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.2.1/dist/f5-bigip-runtime-init-1.2.1-1.gz.run'

    cat << 'EOF' > /config/cloud/runtime-init.conf
    ---
    pre_onboard_enabled: []
    runtime_parameters:
      - name: HOST_NAME
        type: metadata
        metadataProvider:
            environment: gcp
            type: compute
            field: name
      - name: BIGIP_PASSWORD
        type: url
        value: http://169.254.169.254/computeMetadata/v1/instance/id
        headers:
          - name: Metadata-Flavor
            value: Google
    bigip_ready_enabled: []
    extension_packages:
      install_operations:
        - extensionType: do
          extensionVersion: 1.23.0
          extensionHash: 03907f233d3f619b1f5cb1f311f5abdb619ef5cdbe31dcf81aeec6148c2beea9
          extensionUrl: https://alex-customizations.s3.us-west-2.amazonaws.com/atc/f5-declarative-onboarding-1.23.0-2.noarch.rpm
        - extensionType: as3
          extensionVersion: 3.26.0
          extensionHash: b33a96c84b77cff60249b7a53b6de29cc1e932d7d94de80cc77fb69e0b9a45a0
        - extensionType: ts
          extensionVersion: 1.18.0
          extensionHash: de4c82cafe503e65b751fcacfb2f169912ad5ce1645e13c5135dca972299174a
    extension_services:
      service_operations:
        - extensionType: do
          type: inline
          value:
            Common:
              class: Tenant
              My_DbVariables:
                class: DbVariables
                provision.extramb: 1000
                restjavad.useextramb: true
                ui.advisory.enabled: true
                ui.advisory.color: blue
                ui.advisory.text: "Provisioned via Runtime Init and DO"
              My_Dns:
                class: DNS
                nameServers:
                - 169.254.169.254
              My_Ntp:
                class: NTP
                servers:
                - 1.pool.ntp.org
                - 2.pool.ntp.org
                timezone: UTC
              My_Provisioning:
                class: Provision
                ltm: nominal
                asm: nominal
              My_System:
                autoPhonehome: true
                class: System
                hostname: '{{{ HOST_NAME }}}.local'
              admin:
                class: User
                userType: regular
                partitionAccess:
                  all-partitions:
                    role: admin
                password: '{{{BIGIP_PASSWORD}}}'
                shell: bash 
            async: true
            class: Device
            label: myBIG-IPdeclarationfordeclarativeonboarding
            schemaVersion: 1.0.0
        - extensionType: as3
          type: inline
          value:
            remark: ASM_VS1
            schemaVersion: 3.0.0
            label: ASM_VS1
            class: ADC
            controls:
              class: Controls
              logLevel: debug
            Tenant_1:
              class: Tenant
              Shared:
                class: Application
                template: shared
                monitor_respond_200:
                  class: iRule
                  iRule: "when HTTP_REQUEST {\n   HTTP::respond 200 System Responding \n}\n"
                gcp-fr-probe-external:
                  class: Service_HTTP
                  remark: Health check listener for GCP health checks
                  virtualPort: 40000
                  virtualAddresses:
                  - 0.0.0.0
                  iRules:
                  - monitor_respond_200
                telemetry_local_rule:
                  remark: Only required when TS is a local listener
                  class: iRule
                  iRule: |-
                    when CLIENT_ACCEPTED {
                      node 127.0.0.1 6514
                    }
                telemetry_local:
                  remark: Only required when TS is a local listener
                  class: Service_TCP
                  virtualAddresses:
                  - 255.255.255.254
                  virtualPort: 6514
                  iRules:
                  - telemetry_local_rule
                telemetry:
                  class: Pool
                  members:
                  - enable: true
                    serverAddresses:
                    - 255.255.255.254
                    servicePort: 6514
                  monitors:
                  - bigip: "/Common/tcp"
                telemetry_hsl:
                  class: Log_Destination
                  type: remote-high-speed-log
                  protocol: tcp
                  pool:
                    use: telemetry
                telemetry_formatted:
                  class: Log_Destination
                  type: splunk
                  forwardTo:
                    use: telemetry_hsl
                telemetry_publisher:
                  class: Log_Publisher
                  destinations:
                  - use: telemetry_formatted
                telemetry_asm_security_log_profile:
                  class: Security_Log_Profile
                  application:
                    localStorage: false
                    remoteStorage: splunk
                    servers:
                    - address: 255.255.255.254
                      port: '6514'
                    storageFilter:
                      requestType: illegal
                shared_pool:
                  class: Pool
                  remark: Service 1 shared pool
                  monitors:
                  - http
                  members:
                  - servicePort: 80
                    addressDiscovery: fqdn
                    autoPopulate: true
                    hostname: httpbin.org
              HTTP_Service:
                template: http
                class: Application
                serviceMain:
                  class: Service_HTTP
                  virtualAddresses:
                  - 0.0.0.0
                  snat: auto
                  policyWAF:
                    use: WAFPolicy
                  securityLogProfiles:
                    - use: "/Tenant_1/Shared/telemetry_asm_security_log_profile"
                  pool: "/Tenant_1/Shared/shared_pool"
                WAFPolicy:
                  ignoreChanges: false
                  url: https://raw.githubusercontent.com/f5devcentral/f5-asm-policy-templates/master/owasp_ready_template/owasp-auto-tune-v1.1.xml
                  enforcementMode: blocking
                  class: WAF_Policy
              HTTPS_Service:
                template: https
                class: Application
                serviceMain:
                  virtualAddresses:
                  - 0.0.0.0
                  snat: auto
                  policyWAF:
                    use: WAFPolicy
                  securityLogProfiles:
                    - use: "/Tenant_1/Shared/telemetry_asm_security_log_profile"
                  pool: "/Tenant_1/Shared/shared_pool"
                  serverTLS:
                    bigip: "/Common/clientssl"
                  redirect80: false
                  class: Service_HTTPS
                WAFPolicy:
                  url: https://raw.githubusercontent.com/f5devcentral/f5-asm-policy-templates/master/owasp_ready_template/owasp-auto-tune-v1.1.xml
                  ignoreChanges: false
                  enforcementMode: blocking
                  class: WAF_Policy
    EOF

    # Download and install f5-bigip-runtime-init package
    for i in {1..30}; do
        curl -fv --retry 1 --connect-timeout 5 -L "${PACKAGE_URL}" -o "/var/config/rest/downloads/${PACKAGE_URL##*/}" && break || sleep 10
    done

    # Install
    bash "/var/config/rest/downloads/${PACKAGE_URL##*/}" -- '--cloud gcp'

    # Run Runtime-init
    /usr/local/bin/f5-bigip-runtime-init --config-file /config/cloud/runtime-init.conf

    echo "$(date +"%Y-%m-%dT%H:%M:%S.%3NZ") : Startup Script Finish"
  tags:
    - allow-mgmt
    - allow-vip
    - allow-internal-common
    - allow-google-apis
    - allow-gcp-lb
---
# Not present until 1.56.0 - https://github.com/GoogleCloudPlatform/k8s-config-connector/blob/v1.56.0/crds/compute_v1beta1_computeinstancegroupmanager.yaml
# https://github.com/GoogleCloudPlatform/k8s-config-connector/issues/314
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeInstanceGroupManager
metadata:
  name: mycomputeinstancegroupmanager
  namespace: config-control # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/project-id: yourproject # kpt-set: ${project-id}
spec:
  location: us-west1  # kpt-set: ${region}
  baseInstanceName: bigip
  autoHealingPolicies:
    - healthCheckRef:
        name: computeinstancegroupmanager-hc 
      initialDelaySec: 900
  targetSize: 2
  instanceTemplateRef:
    name: instance-template
  updatePolicy:
    instanceRedistributionType: PROACTIVE
    minimalAction: REPLACE
    maxSurge:
      fixed: 3
    maxUnavailable:
      fixed: 0
  targetPools:
  - name: target-pool
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeHealthCheck
metadata:
  name: computeinstancegroupmanager-hc
  namespace: config-control # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/project-id: yourproject # kpt-set: ${project-id}
spec:
  location: us-west1  # kpt-set: ${region}
  httpHealthCheck:
    port: 40000
  timeoutSec: 10
  checkIntervalSec: 30
  healthyThreshold: 2
  unhealthyThreshold: 5

